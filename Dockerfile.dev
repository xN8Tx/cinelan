FROM node:18

WORKDIR /app

COPY package.json .
RUN npm install

COPY . .

CMD [ "npm", "run", "dev" ]

import fs from "fs";
import pg from "pg";

const { Pool } = pg;

const errorString = "ðŸ˜¿ Error:";
const queryString =
"CREATE TABLE IF NOT EXISTS media_files (id SERIAL PRIMARY KEY,parent_id INT REFERENCES media_files(id),type VARCHAR(10) NOT NULL CHECK (type IN ('file', 'folder')),name VARCHAR(50) NOT NULL,original_source VARCHAR(250) NOT NULL,poster_source VARCHAR(250),original_size BIGINT,general_size BIGINT,poster_size BIGINT,add_time TIMESTAMPTZ NOT NULL,last_use_time TIMESTAMPTZ,format VARCHAR(25),duration BIGINT,last_watched_position BIGINT);";

const createFolder = (folder) => {
fs.stat(`/${folder}`, function (err) {
if (err) {
fs.mkdir(`/app/upload/${folder}`, (err) => {
if (err) {
throw new Error(
`${errorString} can not create "${folder}" folder in "${process.env.UPLOAD_FOLDER}". Message: ${err}`,
);
}
});
}
});
};

export default (phase, { defaultConfig }) => {
// Create database if it's not exists
const connector = new Pool({
connectionString: process.env.DATABASE_PATH,
ssl: false,
});

connector.query(queryString).catch((error) => {
throw new Error(
`${errorString} can not create table. Error message: ${error}.`,
);
});

if (!process.env.UPLOAD_FOLDER) {
throw new Error(
`${errorString} value of UPLOAD_FOLDER is empty, please set up environment.`,
);
}

// Create all folders
createFolder("upload");
createFolder("poster");
createFolder("logs");

const nextConfig = {};
return nextConfig;
};
